name: CI Pipeline

# Quando o pipeline deve ser executado
on:
  push:
    branches:
      - main
      - developer
  pull_request:
    branches:
      - main
      - developer

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Verifica o código do repositório
    - name: Checkout the code
      uses: actions/checkout@v3

    # Configura o ambiente Go
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.16

    - name: Go to the project directory
      run: cd jwt-app        
    
    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('jwt-app/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-  

    # Instala as dependências do Go
    - name: Install dependencies
      run: go mod download
      working-directory: jwt-app

    # Executa os testes
    - name: Run tests
      run: go test ./...
      working-directory: jwt-app

    # Construir a imagem Docker
    - name: Build Docker image
      run: docker build -t thicarvalho/backend_challenge -f Dockerfile .
      working-directory: .

    # Logar no Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    # Fazer push da imagem para o Docker Hub
    - name: Push Docker image
      run: docker push thicarvalho/backend_challenge:latest
